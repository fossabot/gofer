// Code generated by mockery v2.4.0-beta. DO NOT EDIT.

package mocks

import (
	context "github.com/patrickascher/gofer/controller/context"
	mock "github.com/stretchr/testify/mock"
)

// Renderer is an autogenerated mock type for the Renderer type
type Renderer struct {
	mock.Mock
}

// Error provides a mock function with given fields: response, code, err
func (_m *Renderer) Error(response *context.Response, code int, err error) error {
	ret := _m.Called(response, code, err)

	var r0 error
	if rf, ok := ret.Get(0).(func(*context.Response, int, error) error); ok {
		r0 = rf(response, code, err)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Icon provides a mock function with given fields:
func (_m *Renderer) Icon() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Name provides a mock function with given fields:
func (_m *Renderer) Name() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Write provides a mock function with given fields: response
func (_m *Renderer) Write(response *context.Response) error {
	ret := _m.Called(response)

	var r0 error
	if rf, ok := ret.Get(0).(func(*context.Response) error); ok {
		r0 = rf(response)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
